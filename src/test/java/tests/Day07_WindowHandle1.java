package tests;

import org.junit.Assert;
import org.junit.Test;
import org.openqa.selenium.By;
import utilities.TestBase;

import java.util.Set;

public class Day07_WindowHandle1 extends TestBase {
    /*
    Given user is on the https://the-internet.herokuapp.com/windows
    Then user verifies the text : “Opening a new window”
    Then user verifies the title of the page is “The Internet”
    When user clicks on the “Click Here” button
    Then user verifies the new window title is “New Window”
    Then user verifies the text:  “New Window”
    When user goes back to the previous window and then verifies the title : “The Internet”
     */

    @Test
    public void windowHandleTest() throws InterruptedException {
        //        Given user is on the https://the-internet.herokuapp.com/windows
        driver.get("https://the-internet.herokuapp.com/windows");

        //        Then user verifies the text : “Opening a new window”
        String window1Text = driver.findElement(By.xpath("//h3")).getText();
        Assert.assertEquals("Opening a new window",window1Text);

        //        Then user verifies the title of the page is “The Internet”
        Assert.assertEquals("The Internet", driver.getTitle());

        //        GETTING THE WINDOW 1 HANDLE(UNIQUE PAGE ID)
        String window1Handle = driver.getWindowHandle(); //RETURNS THE CURRENT WINDOW ID
        System.out.println(window1Handle);

        //        When user clicks on the “Click Here” button
        driver.findElement(By.linkText("Click Here")).click();

        //        Then user verifies the new window title is “New Window”
        //        WE DO TESTING IN A NEW WINDOW, SO WE MUST SWITCH TO THAT WINDOW
        //        AS OF NOW 2 WINDOWS OPEN. USE getWindowHandles() TO GET BOTH IDs
        Set<String> allWindowHandles = driver.getWindowHandles();
        System.out.println(allWindowHandles);
        for (String eachHandle : allWindowHandles){//looping through the windows
            if (!eachHandle.equals(window1Handle)){//if we are not in windows 1 (means windows 2)
                driver.switchTo().window(eachHandle);//then switch the window 2
            }
        }
//          AT THIS POINT DRIVER IS SWITCHED TO WINDOWS 2

        String window2Handle = driver.getWindowHandle();// WINDOW 2 ID.
//          Then user verifies the text:  “New Window”
        String window2Text = driver.findElement(By.xpath("//h3")).getText();
        Assert.assertEquals("New Window",window2Text);

        Thread.sleep(5000);
//          When user goes back to the previous window and then verifies the title : “The Internet”
        driver.switchTo().window(window1Handle);//switches window 1
//          Then user verifies the title of the page is “The Internet”
        Assert.assertEquals("The Internet", driver.getTitle());

        Thread.sleep(5000);
//           When user goes back to the previous window and then verifies the title : “The Internet”
        driver.switchTo().window(window1Handle);//switches window 1
//           Then user verifies the title of the page is “The Internet”
        Assert.assertEquals("The Internet", driver.getTitle());

    }
}
/*
TestBase
Utility class
There is before and after methods in this class
Our test base is abstract so we just extend and use the methods
This kind of utility classes makes the actual test classes short and clean

Iframes
Iframe is used to add page within a page, maps, videos, scrollbars,…
Driver must switch to iframe first to see the elements in the frame
driver.switchTo().frame(“by using id/name, index, or web-element”);-> get in
driver.switchTo().parentFrame() or defaultContent()

Multiple windows
The multiple windows may open when there is a link that opens in a new TAB or WINDOWS
We use windowHandle to get the current window id, windowHandles to get all open windows ids
We use set of list to get all window ids and switch to the desired window using loop and if condition

Alerts
Alerts are generated by javascript alerts. For example when clicking a button, we can see informative alerts
When there is an alert, we must handle it first to continue the test execution.
We cannot inspect alerts, but we can handle alerts by switching them first
driver.switchTo().alert().  —-accept(), dissmiss(), getText(), and sendKeys()——
 */
